#ifndef __KEYMAP_H
#define __KEYMAP_H

#include <keyboard.h>
#include <stdint.h>
#include <stdbool.h>

// IBM KB-0225
// Scan Code Set 2
// German, Mac

static char keymap_default[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, '^', 0,
	0, 0, 0, 0, 0, 'q', '1', 0,
	0, 0, 'y', 's', 'a', 'w', '2', 0,
	0, 'c', 'x', 'd', 'e', '4', '3', 0,
	0, ' ', 'v', 'f', 't', 'r', '5', 0,
	0, 'n', 'b', 'h', 'g', 'z', '6', 0,
	0, 0, 'm', 'j', 'u', '7', '8', 0,
	0, '"', 'k', 'i', 'o', '0', '9', 0,
	0, '.', '-', 'l', /*'ö'*/0, 'p', /*'ß'*/0, 0,
	0, 0, /*'ä'*/0, 0, /*'ü'*/0, /*'´'*/0, 0, 0,
	0, 0, '\n', '+', 0, '#', 0, 0,
	0, '<', 0, 0, 0, 0, 0, 0,
	0, '1', 0, '4', '7', 0, 0, 0,
	'0', ',', '2', '5', '6', '8', 0, 0,
	0, '+', '3', '-', '*', '9', 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
};

static char keymap_shift[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, /*'°'*/0, 0,
	0, 0, 0, 0, 0, 'Q', '!', 0,
	0, 0, 'Y', 'S', 'A', 'W', '"', 0,
	0, 'C', 'X', 'D', 'E', '$', /*'§'*/0, 0,
	0, 0, 'V', 'F', 'T', 'R', '%', 0,
	0, 'N', 'B', 'H', 'G', 'Z', '&', 0,
	0, 0, 'M', 'J', 'U', '/', '(', 0,
	0, '"', 'K', 'I', 'O', '=', ')', 0,
	0, ':', '_', 'L', /*'Ö'*/0, 'P', '?', 0,
	0, 0, /*'Ä'*/0, 0, /*'Ü'*/0, '`', 0, 0,
	0, 0, 0, '*', 0, '\'', 0, 0,
	0, '>', 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
};

static char keymap_alt[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, /*'„'*/0, 0,
	0, 0, 0, 0, 0, /*'«'*/0, /*'¡'*/0, 0,
	0, 0, /*'¥'*/0, /*'‚'*/0, /*'å'*/0, /*'∑'*/0, /*'“'*/0, 0,
	0, /*'ç'*/0, /*'≈'*/0, /*'∂'*/0, /*'€'*/0, /*'¢'*/0, /*'¶'*/0, 0,
	0, 0, /*'√'*/0, /*'ƒ'*/0, /*'†'*/0, /*'®'*/0, '[', 0,
	0, '~', /*'∫'*/0, /*'ª'*/0, /*'©'*/0, /*'Ω'*/0, ']', 0,
	0, 0, /*'µ'*/0, /*'º'*/0, /*'¨'*/0, '|', '{', 0,
	0, ';', /*'∆'*/0, /*'⁄'*/0, /*'ø'*/0, /*'≠'*/0, '}', 0,
	0, /*'…'*/0, /*'–'*/0, '@', /*'œ'*/0, /*'π'*/0, /*'¿'*/0, 0,
	0, 0, /*'æ'*/0, 0, /*'•'*/0, '\'', 0, 0,
	0, 0, 0, /*'±'*/0, 0, /*'‘'*/0, 0, 0,
	0, /*'≤'*/0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
};

static char keymap_shift_alt[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, /*'“'*/0, 0,
	0, 0, 0, 0, 0, /*'»'*/0, /*'¬'*/0, 0,
	0, 0, /*'‡'*/0, /*'Í'*/0, /*'Å'*/0, /*'„'*/0, /*'”'*/0, 0,
	0, /*'Ç'*/0, /*'Ù'*/0, /*'™'*/0, /*'‰'*/0, /*'£'*/0, '#', 0,
	0, 0, /*'◊'*/0, /*'Ï'*/0, /*'˝'*/0, /*'¸'*/0, /*'ﬁ'*/0, 0,
	0, /*'›'*/0, /*'‹'*/0, /*'Ó'*/0, /*'Ì'*/0, /*'ˇ'*/0, '^', 0,
	0, 0, /*'˘'*/0, /*'ı'*/0, /*'Á'*/0, '\\', /*'˜'*/0, 0,
	0, /*'˛'*/0, /*'ˆ'*/0, /*'Û'*/0, /*'Ø'*/0, /*'¯'*/0, /*'·'*/0, 0,
	0, /*'÷'*/0, /*'—'*/0, /*'ﬂ'*/0, /*'Œ'*/0, /*'∏'*/0, /*'˙'*/0, 0,
	0, 0, /*'Æ'*/0, 0, /*'°'*/0, /*'˚'*/0, 0, 0,
	0, 0, 0, /*''*/0, 0, /*'’'*/0, 0, 0,
	0, /*'≥'*/0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
};

static char keymap_get_input(uint16_t key, bool key_states[]) {
	if (key > 255) return 0;
	
	bool shift = key_states[KEY_LEFT_SHIFT] || key_states[KEY_RIGHT_SHIFT];
	bool alt = key_states[KEY_LEFT_META] || key_states[KEY_RIGHT_META];
	bool ctrl = key_states[KEY_LEFT_CTRL] || key_states[KEY_RIGHT_CTRL];
	
	if (ctrl) {
		return 0;
	}
	
	if (shift && alt) {
		return keymap_shift_alt[key];
	} else if (shift) {
		return keymap_shift[key];
	} else if (alt) {
		return keymap_alt[key];
	} else {
		return keymap_default[key];
	}
}

#endif
